import json
# Constants that won't be changed throughout the project

numbered_Rows = 20
numbered_Columns = 26
seating_Options = {"Front": {"price": 80, "rows": (0, 4)},
                   "Middle": {"price": 50, "rows": (5, 10)},
                   "Back": {"price": 25, "rows": (11, 19)}}
seat_Char = "."
occupied_Char = "X"
empty_Char = "e"
tax_Rate = 0.0725
mask_Fee = 5.00
data_File = "concert_data.json"

# Global variables
seating_data = []

def create_seating():
    global seating_data
    seating_data = [[seat_Char] * numbered_Columns for _ in range (numbered_Rows)]

def print_seating():
    print("  " + " ".join([chr(col + 65) for col in range (numbered_Columns)]))
    for row_num, row in enumerate(seating_data):
        print(f"{row_num:02d} {' '.join(row)}")
    
def purchace_ticket(name, email, seat_type, num_tickets):
    global seating_data

    # Find available seats for purchace
    available_seats = []
    for row in range(numbered_Rows):
        for col in range(0, numbered_Columns - 2, 3):
            if all(seating_data[row][col + i] == seat_Char for i in range (3)):
                available_seats.append((row, col))

    if len(available_seats) < num_tickets:
        print("Sorry, there aren't enough seats to fufill your request.")
    return

    # Reserve(d) seats
    for i in range(num_tickets):
        row, col = available_seats[i]
        for j in range (3):
            seating_data[row][col +j] = occupied_Char
    
    # Calculate seat prices
    price = seat_type[seat_type]["price"]
    sub_total = price * num_tickets
    tax = sub_total * tax_Rate
    total = sub_total + tax + (mask_Fee * num_tickets)

    # Save purchase data to a JSON file
    purchase_data = {
        "name": name,
        "email": email,
        "num_tickets": num_tickets,
        "seat_type": seat_type,
        "total": total
    }            
    with open(data_File, "a") as purchase_file:
        purchace_file.write(json.dumps(purchase_data) + "\n")

    # Display the receipt
    print(f"\nThank you, {name}! Your purchase is complete.")
    print(f"Subtotal: ${sub_total:.2f}")
    print(f"Tax: ${tax:.2f}")
    print(f"Mask Fee: ${mask_Fee * num_tickets:.2f}")
    print(f"Total: ${total:.2f}")

def search_by_name(name):
    with open(data_File, "r") as purchase_file:
        for line in purchase_file:
            purchase_data = json.loads(line)
            if purchase_data["name"] == name:
                print(f"Name: {purchase_data['name']}, Email: {purchase_data['email']}")
                print(f"Tickets Purchased: {purchase_data['num_tickets']} ({purchase_data['seat_type']} type)")
                print(f"Total Price: ${purchase_data['total']:.2f}")
                print("-" * 30)

def display_all_purchases():
    with open(data_File, "r") as purchase_file:
        for line in purchase_file:
            purchase_data = json.loads(line)
            print(f"Name: {purchase_data['name']}, Email: {purchase_data['email']}")
            print(f"Tickets Purchased: {purchase_data['num_tickets']} ({purchase_data['seat_type']} type)")
            print(f"Total Price: ${purchase_data['total']:.2f}")
            print("-" * 30)

def main():
    create_seating()

    try:
        with open(data_File, "r") as data_file:
            seating_data = json.load(data_file)
    except FileNotFoundError:
        create_seating()

    while True:
        print("\nMenu:")
        print("[V]iew seating")
        print("[B]uy a ticket")
        print("[S]earch by name")
        print("[D]isplay all purchases")
        print("[Q]uit")
        choice = input("Enter your choice:").strip().lower()

        if choice =='v':
            print_seating()
        elif choice =='b':
            name = input("Enter your name: ")
            email = input("Enter your email: ")
            print("Available seat types: Front, Middle, Back")
            seat_type = input ("Enter the type of seat you want: ").capitalize()
            if seat_type not in seating_Options:
                print("Invalid seat type.")
                continue
            try:
                num_tickets = int(input("Enter the number of tickets you'd like to purchase: "))
            except ValueError:
                print("Invalid numberr of tickets.")
                continue
            purchase_ticket(name, email, seat_type, num_tickets)
        elif choice == 's':
            name = input("Enter the name to search: ") 
            search_by_name(name)
        elif choice == 'd':
            display_all_purchases()
        elif choice =='q':
            